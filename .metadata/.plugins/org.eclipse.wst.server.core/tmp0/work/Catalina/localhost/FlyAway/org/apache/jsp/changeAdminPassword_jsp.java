/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-01-18 08:24:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class changeAdminPassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>FlyAway</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "adminHeader.jsp", out, false);
      out.write("\r\n");
      out.write("   </div> \r\n");
      out.write("   <br><br><br><br>\r\n");
      out.write(" <center> <div id=\"changePasswordDiv\">\r\n");
      out.write("    \r\n");
      out.write("       \r\n");
      out.write("      <form name=\"changeform\" action=\"changePasswordServlet\"   onsubmit=\"return changePasswordvalidateForm()\">\r\n");
      out.write("       Current Password : <input class=\"textboxstyle\" type=\"text\" name=\"currentpassword\" ><br><br>\r\n");
      out.write("      New Password : <input  class=\"textboxstyle\" type=\"text\" name=\"newpassword\" ><br><br>\r\n");
      out.write("      Confirm Password : <input  class=\"textboxstyle\" type=\"text\" name=\"confirmpassword\" ><br><br>\r\n");
      out.write("      <input type=\"submit\" class=\"buttonstyle\" value=\"ChangePassword\">\r\n");
      out.write("      </form>\r\n");
      out.write("       \r\n");
      out.write("    </div></center>\r\n");
      out.write("        \r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function changePasswordvalidateForm() {\r\n");
      out.write("  var currentpassword = document.forms[\"changeform\"][\"currentpassword\"].value;\r\n");
      out.write("  var newpassword = document.forms[\"changeform\"][\"newpassword\"].value;\r\n");
      out.write("  var confirmpassword = document.forms[\"changeform\"][\"confirmpassword\"].value;\r\n");
      out.write("  \r\n");
      out.write("  if (currentpassword == \"\") {\r\n");
      out.write("    alert(\"currentpassword must be filled out\");\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("  if (newpassword == \"\") {\r\n");
      out.write("\t    alert(\"newpassword must be filled out\");\r\n");
      out.write("\t    return false;\r\n");
      out.write("\t  }\r\n");
      out.write("  if (confirmpassword == \"\") {\r\n");
      out.write("\t    alert(\"confirmpassword must be filled out\");\r\n");
      out.write("\t    return false;\r\n");
      out.write("\t  }\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".textboxstyle {\r\n");
      out.write("  border-radius:5px;\r\n");
      out.write("   height: 30px;\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write(".buttonstyle\r\n");
      out.write("{\r\n");
      out.write("\r\n");
      out.write("background-color: Cyan;\r\n");
      out.write("color: white;\r\n");
      out.write("padding:20px;\r\n");
      out.write("margin: 5px;\r\n");
      out.write(" font-size: large;\r\n");
      out.write(" font-weight: bold;\r\n");
      out.write("border-radius: 12px;\r\n");
      out.write(" \r\n");
      out.write(" cursor: pointer;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write(".buttonstyle:hover {\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  border: 0;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  color: #f00;\r\n");
      out.write("  height: 50px;\r\n");
      out.write("  width: 134px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  font-variant: small-caps;\r\n");
      out.write("  background: White;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
